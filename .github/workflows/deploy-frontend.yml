name: Deploy Frontend (OIDC)

on:
  push:
    branches: [ main, staging, dev ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      dryrun:
        description: "Prévisualiser le sync S3 (true/false)"
        required: false
        default: "false"

permissions:
  id-token: write
  contents: read

env:
  REGION: eu-west-3
  # Rôles OIDC déjà créés côté AWS
  ROLE_STAGING: arn:aws:iam::409818814260:role/RcvoDeployStagingRole
  ROLE_PROD:    arn:aws:iam::409818814260:role/RcvoDeployProdRole
  # Buckets cibles
  S3_STAGING: s3://rcvo-transition/ui/
  S3_PROD:    s3://rcvo-officiel/ui/
  NODE_VERSION: "20"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Choix rôle/bucket/DRYRUN selon la ref
      - name: Choisir rôle/bucket & DRYRUN
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          REF="${GITHUB_REF}"
          if [[ "$REF" == refs/heads/main || "$REF" == refs/tags/v* ]]; then
            echo "ROLE=${ROLE_PROD}"  >> "$GITHUB_OUTPUT"
            echo "BUCKET=${S3_PROD}" >> "$GITHUB_OUTPUT"
          else
            echo "ROLE=${ROLE_STAGING}"  >> "$GITHUB_OUTPUT"
            echo "BUCKET=${S3_STAGING}" >> "$GITHUB_OUTPUT"
          fi

          # DRYRUN: input > variable de dépôt FRONTEND_DRYRUN > false
          DRY="${{ github.event.inputs.dryrun || '' }}"
          if [[ -z "$DRY" ]]; then DRY="${{ vars.FRONTEND_DRYRUN || 'false' }}"; fi
          [[ "$DRY" == "true" ]] && echo "DRYRUN=true" >> "$GITHUB_OUTPUT" || echo "DRYRUN=false" >> "$GITHUB_OUTPUT"

          {
            echo "### deploy summary"
            echo ""
            echo "**Ciblage**"
            echo "- REF: \`$REF\`"
            echo "- ROLE: \`${{ steps.pick.outputs.ROLE }}\`"
            echo "- S3: \`${{ steps.pick.outputs.BUCKET }}\`"
            echo "- DRYRUN: \`${{ steps.pick.outputs.DRYRUN }}\`"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Configurer AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.REGION }}
          role-to-assume: ${{ steps.pick.outputs.ROLE }}

      - name: Installer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Installer deps (si lockfile ET package.json)
        shell: bash
        run: |
          if [[ -f package.json && -f package-lock.json ]]; then
            npm ci
          fi

      - name: Build (si script présent)
        shell: bash
        run: |
          if [[ -f package.json ]] && jq -e '.scripts.build' package.json >/dev/null 2>&1; then
            npm run build
          else
            echo "Pas de script build: déploiement de fichiers statiques."
          fi

      - name: Localiser le dossier à publier
        id: src
        shell: bash
        run: |
          set -euo pipefail
          cand=()
          [[ -d dist   ]] && cand+=(dist)
          [[ -d build  ]] && cand+=(build)
          [[ -d public ]] && cand+=(public)
          [[ -d ui     ]] && cand+=(ui)
          if [[ ${#cand[@]} -gt 0 ]]; then
            SRC="${cand[0]}"
          else
            SRC="."
          fi
          echo "SRC=$SRC" >> "$GITHUB_OUTPUT"
          {
            echo ""
            echo "**Dossier de publication**"
            echo "- SRC: \`$SRC\`"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Prévisualisation (DRY-RUN)
        if: steps.pick.outputs.DRYRUN == 'true'
        shell: bash
        run: |
          set -euo pipefail
          aws s3 sync "${{ steps.src.outputs.SRC }}/" "${{ steps.pick.outputs.BUCKET }}" --dryrun \
            --exclude ".git/*" \
            --exclude ".github/*" \
            --exclude "node_modules/*" \
            --exclude ".*" \
            --exclude "*.md" \
            --exclude "package*.json" \
            --delete

      - name: Sync vers S3 (écriture réelle)
        if: steps.pick.outputs.DRYRUN != 'true'
        shell: bash
        run: |
          set -euo pipefail
          aws s3 sync "${{ steps.src.outputs.SRC }}/" "${{ steps.pick.outputs.BUCKET }}" \
            --exclude ".git/*" \
            --exclude ".github/*" \
            --exclude "node_modules/*" \
            --exclude ".*" \
            --exclude "*.md" \
            --exclude "package*.json" \
            --delete

      - name: Smoke test (statique)
        shell: bash
        run: |
          set -euo pipefail
          aws s3 ls "${{ steps.pick.outputs.BUCKET }}index.html" >/dev/null 2>&1 || \
          aws s3 ls "${{ steps.pick.outputs.BUCKET }}login.html" >/dev/null 2>&1 || \
          echo "⚠️ Aucun index.html/login.html (OK si le site n'en a pas)."
