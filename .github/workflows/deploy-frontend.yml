name: Deploy Frontend (OIDC)

on:
  push:
    branches: [ main, staging ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      dry_run:
        description: "DRY_RUN (prévisualisation, n'écrit rien)"
        type: boolean
        default: true

permissions:
  id-token: write
  contents: read

env:
  REGION: eu-west-3
  BUCKET_STAGING: rcvo-transition
  BUCKET_PROD:    rcvo-officiel
  KEY_PREFIX: ui/
  DRYRUN_DEFAULT: "true"   # sécurité: DRY-RUN par défaut

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ROLE_STAGING: arn:aws:iam::409818814260:role/RcvoDeployStagingRole
      ROLE_PROD:    arn:aws:iam::409818814260:role/RcvoDeployProdRole

    steps:
      - uses: actions/checkout@v4

      - name: Choisir rôle/bucket & DRYRUN
        id: pick
        shell: bash
        run: |
          REF="${GITHUB_REF}"
          if [[ "$REF" == refs/heads/main || "$REF" == refs/tags/v* ]]; then
            ROLE="${ROLE_PROD}";  BUCKET="${BUCKET_PROD}"
          else
            ROLE="${ROLE_STAGING}"; BUCKET="${BUCKET_STAGING}"
          fi
          # DRY-RUN: input si présent, sinon valeur par défaut
          DRY="${{ inputs.dry_run }}"
          [[ -z "$DRY" ]] && DRY="${DRYRUN_DEFAULT}"
          echo "ROLE=$ROLE"       >> "$GITHUB_OUTPUT"
          echo "BUCKET=$BUCKET"   >> "$GITHUB_OUTPUT"
          echo "DRYRUN=$DRY"      >> "$GITHUB_OUTPUT"

      - name: Configurer AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.REGION }}
          role-to-assume: ${{ steps.pick.outputs.ROLE }}

      - name: Installer deps (si lockfile ET package.json)
        if: ${{ hashFiles('package.json') != '' && hashFiles('package-lock.json') != '' }}
        run: npm ci

      - name: Build (si script présent)
        if: ${{ hashFiles('package.json') != '' }}
        run: |
          if jq -e '.scripts.build' package.json >/dev/null 2>&1; then
            npm run build
          else
            echo "Pas de script build -> on publiera tel quel"
          fi

      - name: Localiser le dossier à publier
        id: dist
        run: |
          set -e
          for D in dist build public out .; do
            if [ -d "$D" ]; then echo "dir=$D" >> "$GITHUB_OUTPUT"; exit 0; fi
          done
          echo "dir=." >> "$GITHUB_OUTPUT"

      - name: Prévisualisation (DRY-RUN)
        if: ${{ steps.pick.outputs.DRYRUN == 'true' }}
        run: |
          echo ">>> DRY-RUN: aucune écriture"
          aws s3 sync "${{ steps.dist.outputs.dir }}/" "s3://${{ steps.pick.outputs.BUCKET }}/${{ env.KEY_PREFIX }}" \
            --only-show-errors --exact-timestamps --dryrun

      - name: Sync vers S3 (écriture réelle)
        if: ${{ steps.pick.outputs.DRYRUN != 'true' }}
        run: |
          aws s3 sync "${{ steps.dist.outputs.dir }}/" "s3://${{ steps.pick.outputs.BUCKET }}/${{ env.KEY_PREFIX }}" \
            --only-show-errors --exact-timestamps
          echo "Déployé vers s3://${{ steps.pick.outputs.BUCKET }}/${{ env.KEY_PREFIX }}"

      - name: Smoke test (statique)
        if: ${{ steps.pick.outputs.DRYRUN != 'true' }}
        run: aws s3 ls "s3://${{ steps.pick.outputs.BUCKET }}/${{ env.KEY_PREFIX }}" | head -n 20
