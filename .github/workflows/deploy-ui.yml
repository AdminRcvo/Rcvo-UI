name: Déployer l'interface Rcvo (UI) sur Elastic Beanstalk

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EB_APP_NAME: ${{ secrets.EB_APP_NAME }}
  EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configurer AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: actions/checkout@v4

      - name: Pack (ui.zip)
        run: |
          set -euo pipefail
          zip -qr ui.zip . -x ".git/*"

      - name: Push S3 + créer version EB
        id: ver
        run: |
          set -euo pipefail
          TS=$(date +%Y%m%d-%H%M%S)
          LABEL="ui-${TS}"
          ACC=$(aws sts get-caller-identity --query Account --output text)
          S3B="elasticbeanstalk-${AWS_REGION}-${ACC}"
          S3K="${EB_APP_NAME}/${LABEL}.zip"
          aws s3 cp ui.zip "s3://${S3B}/${S3K}"

          aws elasticbeanstalk create-application-version \
            --application-name "$EB_APP_NAME" \
            --version-label "$LABEL" \
            --source-bundle S3Bucket="$S3B",S3Key="$S3K" \
          2>err.log || { grep -q "already exists" err.log || (cat err.log && exit 1); }

          echo "label=$LABEL" >> "$GITHUB_OUTPUT"

      - name: Déployer sur EB
        run: |
          set -euo pipefail
          aws elasticbeanstalk update-environment \
            --environment-name "${{ env.EB_ENV_NAME }}" \
            --version-label "${{ steps.ver.outputs.label }}"
